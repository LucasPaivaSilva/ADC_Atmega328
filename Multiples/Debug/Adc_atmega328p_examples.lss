
Adc_atmega328p_examples.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000766  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000007ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007ec  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  0000082c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001241  00000000  00000000  00000894  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008c6  00000000  00000000  00001ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000070c  00000000  00000000  0000239b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  00002aa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000492  00000000  00000000  00002b68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000965  00000000  00000000  00002ffa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000395f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 2b 01 	call	0x256	; 0x256 <main>
  78:	0c 94 b1 03 	jmp	0x762	; 0x762 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <cmd_LCD>:
  80:	61 11       	cpse	r22, r1
  82:	02 c0       	rjmp	.+4      	; 0x88 <cmd_LCD+0x8>
  84:	5b 98       	cbi	0x0b, 3	; 11
  86:	01 c0       	rjmp	.+2      	; 0x8a <cmd_LCD+0xa>
  88:	5b 9a       	sbi	0x0b, 3	; 11
  8a:	9b b1       	in	r25, 0x0b	; 11
  8c:	9f 70       	andi	r25, 0x0F	; 15
  8e:	28 2f       	mov	r18, r24
  90:	20 7f       	andi	r18, 0xF0	; 240
  92:	92 2b       	or	r25, r18
  94:	9b b9       	out	0x0b, r25	; 11
  96:	45 e0       	ldi	r20, 0x05	; 5
  98:	4a 95       	dec	r20
  9a:	f1 f7       	brne	.-4      	; 0x98 <cmd_LCD+0x18>
  9c:	00 00       	nop
  9e:	5a 9a       	sbi	0x0b, 2	; 11
  a0:	95 e0       	ldi	r25, 0x05	; 5
  a2:	9a 95       	dec	r25
  a4:	f1 f7       	brne	.-4      	; 0xa2 <cmd_LCD+0x22>
  a6:	00 00       	nop
  a8:	5a 98       	cbi	0x0b, 2	; 11
  aa:	40 ef       	ldi	r20, 0xF0	; 240
  ac:	4a 95       	dec	r20
  ae:	f1 f7       	brne	.-4      	; 0xac <cmd_LCD+0x2c>
  b0:	2b b1       	in	r18, 0x0b	; 11
  b2:	92 2f       	mov	r25, r18
  b4:	9f 70       	andi	r25, 0x0F	; 15
  b6:	40 e1       	ldi	r20, 0x10	; 16
  b8:	84 9f       	mul	r24, r20
  ba:	90 01       	movw	r18, r0
  bc:	11 24       	eor	r1, r1
  be:	29 2b       	or	r18, r25
  c0:	2b b9       	out	0x0b, r18	; 11
  c2:	95 e0       	ldi	r25, 0x05	; 5
  c4:	9a 95       	dec	r25
  c6:	f1 f7       	brne	.-4      	; 0xc4 <cmd_LCD+0x44>
  c8:	00 00       	nop
  ca:	5a 9a       	sbi	0x0b, 2	; 11
  cc:	45 e0       	ldi	r20, 0x05	; 5
  ce:	4a 95       	dec	r20
  d0:	f1 f7       	brne	.-4      	; 0xce <cmd_LCD+0x4e>
  d2:	00 00       	nop
  d4:	5a 98       	cbi	0x0b, 2	; 11
  d6:	90 ef       	ldi	r25, 0xF0	; 240
  d8:	9a 95       	dec	r25
  da:	f1 f7       	brne	.-4      	; 0xd8 <cmd_LCD+0x58>
  dc:	61 11       	cpse	r22, r1
  de:	08 c0       	rjmp	.+16     	; 0xf0 <cmd_LCD+0x70>
  e0:	84 30       	cpi	r24, 0x04	; 4
  e2:	30 f4       	brcc	.+12     	; 0xf0 <cmd_LCD+0x70>
  e4:	8f e3       	ldi	r24, 0x3F	; 63
  e6:	9f e1       	ldi	r25, 0x1F	; 31
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <cmd_LCD+0x68>
  ec:	00 c0       	rjmp	.+0      	; 0xee <cmd_LCD+0x6e>
  ee:	00 00       	nop
  f0:	08 95       	ret

000000f2 <inic_LCD_4bits>:
  f2:	5b 98       	cbi	0x0b, 3	; 11
  f4:	5a 98       	cbi	0x0b, 2	; 11
  f6:	2f ef       	ldi	r18, 0xFF	; 255
  f8:	89 ef       	ldi	r24, 0xF9	; 249
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	80 40       	sbci	r24, 0x00	; 0
 100:	90 40       	sbci	r25, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <inic_LCD_4bits+0xa>
 104:	00 c0       	rjmp	.+0      	; 0x106 <inic_LCD_4bits+0x14>
 106:	00 00       	nop
 108:	8b b1       	in	r24, 0x0b	; 11
 10a:	8f 70       	andi	r24, 0x0F	; 15
 10c:	80 63       	ori	r24, 0x30	; 48
 10e:	8b b9       	out	0x0b, r24	; 11
 110:	25 e0       	ldi	r18, 0x05	; 5
 112:	2a 95       	dec	r18
 114:	f1 f7       	brne	.-4      	; 0x112 <inic_LCD_4bits+0x20>
 116:	00 00       	nop
 118:	5a 9a       	sbi	0x0b, 2	; 11
 11a:	85 e0       	ldi	r24, 0x05	; 5
 11c:	8a 95       	dec	r24
 11e:	f1 f7       	brne	.-4      	; 0x11c <inic_LCD_4bits+0x2a>
 120:	00 00       	nop
 122:	5a 98       	cbi	0x0b, 2	; 11
 124:	90 ef       	ldi	r25, 0xF0	; 240
 126:	9a 95       	dec	r25
 128:	f1 f7       	brne	.-4      	; 0x126 <inic_LCD_4bits+0x34>
 12a:	8f e1       	ldi	r24, 0x1F	; 31
 12c:	9e e4       	ldi	r25, 0x4E	; 78
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <inic_LCD_4bits+0x3c>
 132:	00 c0       	rjmp	.+0      	; 0x134 <inic_LCD_4bits+0x42>
 134:	00 00       	nop
 136:	95 e0       	ldi	r25, 0x05	; 5
 138:	9a 95       	dec	r25
 13a:	f1 f7       	brne	.-4      	; 0x138 <inic_LCD_4bits+0x46>
 13c:	00 00       	nop
 13e:	5a 9a       	sbi	0x0b, 2	; 11
 140:	25 e0       	ldi	r18, 0x05	; 5
 142:	2a 95       	dec	r18
 144:	f1 f7       	brne	.-4      	; 0x142 <inic_LCD_4bits+0x50>
 146:	00 00       	nop
 148:	5a 98       	cbi	0x0b, 2	; 11
 14a:	80 ef       	ldi	r24, 0xF0	; 240
 14c:	8a 95       	dec	r24
 14e:	f1 f7       	brne	.-4      	; 0x14c <inic_LCD_4bits+0x5a>
 150:	8f e1       	ldi	r24, 0x1F	; 31
 152:	93 e0       	ldi	r25, 0x03	; 3
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <inic_LCD_4bits+0x62>
 158:	00 c0       	rjmp	.+0      	; 0x15a <inic_LCD_4bits+0x68>
 15a:	00 00       	nop
 15c:	95 e0       	ldi	r25, 0x05	; 5
 15e:	9a 95       	dec	r25
 160:	f1 f7       	brne	.-4      	; 0x15e <inic_LCD_4bits+0x6c>
 162:	00 00       	nop
 164:	5a 9a       	sbi	0x0b, 2	; 11
 166:	25 e0       	ldi	r18, 0x05	; 5
 168:	2a 95       	dec	r18
 16a:	f1 f7       	brne	.-4      	; 0x168 <inic_LCD_4bits+0x76>
 16c:	00 00       	nop
 16e:	5a 98       	cbi	0x0b, 2	; 11
 170:	80 ef       	ldi	r24, 0xF0	; 240
 172:	8a 95       	dec	r24
 174:	f1 f7       	brne	.-4      	; 0x172 <inic_LCD_4bits+0x80>
 176:	8b b1       	in	r24, 0x0b	; 11
 178:	8f 70       	andi	r24, 0x0F	; 15
 17a:	80 62       	ori	r24, 0x20	; 32
 17c:	8b b9       	out	0x0b, r24	; 11
 17e:	95 e0       	ldi	r25, 0x05	; 5
 180:	9a 95       	dec	r25
 182:	f1 f7       	brne	.-4      	; 0x180 <inic_LCD_4bits+0x8e>
 184:	00 00       	nop
 186:	5a 9a       	sbi	0x0b, 2	; 11
 188:	25 e0       	ldi	r18, 0x05	; 5
 18a:	2a 95       	dec	r18
 18c:	f1 f7       	brne	.-4      	; 0x18a <inic_LCD_4bits+0x98>
 18e:	00 00       	nop
 190:	5a 98       	cbi	0x0b, 2	; 11
 192:	80 ef       	ldi	r24, 0xF0	; 240
 194:	8a 95       	dec	r24
 196:	f1 f7       	brne	.-4      	; 0x194 <inic_LCD_4bits+0xa2>
 198:	60 e0       	ldi	r22, 0x00	; 0
 19a:	88 e2       	ldi	r24, 0x28	; 40
 19c:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
 1a0:	60 e0       	ldi	r22, 0x00	; 0
 1a2:	88 e0       	ldi	r24, 0x08	; 8
 1a4:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
 1a8:	60 e0       	ldi	r22, 0x00	; 0
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
 1b0:	60 e0       	ldi	r22, 0x00	; 0
 1b2:	8c e0       	ldi	r24, 0x0C	; 12
 1b4:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	80 e8       	ldi	r24, 0x80	; 128
 1bc:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
 1c0:	08 95       	ret

000001c2 <ident_num>:
 1c2:	ac 01       	movw	r20, r24
 1c4:	fb 01       	movw	r30, r22
 1c6:	db 01       	movw	r26, r22
 1c8:	9b 01       	movw	r18, r22
 1ca:	2b 5f       	subi	r18, 0xFB	; 251
 1cc:	3f 4f       	sbci	r19, 0xFF	; 255
 1ce:	80 e3       	ldi	r24, 0x30	; 48
 1d0:	8d 93       	st	X+, r24
 1d2:	a2 17       	cp	r26, r18
 1d4:	b3 07       	cpc	r27, r19
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <ident_num+0xe>
 1d8:	9a 01       	movw	r18, r20
 1da:	ad ec       	ldi	r26, 0xCD	; 205
 1dc:	bc ec       	ldi	r27, 0xCC	; 204
 1de:	0e 94 a2 03 	call	0x744	; 0x744 <__umulhisi3>
 1e2:	96 95       	lsr	r25
 1e4:	87 95       	ror	r24
 1e6:	96 95       	lsr	r25
 1e8:	87 95       	ror	r24
 1ea:	96 95       	lsr	r25
 1ec:	87 95       	ror	r24
 1ee:	9c 01       	movw	r18, r24
 1f0:	22 0f       	add	r18, r18
 1f2:	33 1f       	adc	r19, r19
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	82 0f       	add	r24, r18
 202:	93 1f       	adc	r25, r19
 204:	9a 01       	movw	r18, r20
 206:	28 1b       	sub	r18, r24
 208:	39 0b       	sbc	r19, r25
 20a:	c9 01       	movw	r24, r18
 20c:	80 5d       	subi	r24, 0xD0	; 208
 20e:	81 93       	st	Z+, r24
 210:	9a 01       	movw	r18, r20
 212:	0e 94 a2 03 	call	0x744	; 0x744 <__umulhisi3>
 216:	ac 01       	movw	r20, r24
 218:	56 95       	lsr	r21
 21a:	47 95       	ror	r20
 21c:	56 95       	lsr	r21
 21e:	47 95       	ror	r20
 220:	56 95       	lsr	r21
 222:	47 95       	ror	r20
 224:	41 15       	cp	r20, r1
 226:	51 05       	cpc	r21, r1
 228:	b9 f6       	brne	.-82     	; 0x1d8 <ident_num+0x16>
 22a:	08 95       	ret

0000022c <readAdc>:
#include "def_principais.h"
#include "LCD.h"

float readAdc(char chan)
{
	ADMUX = (1<<REFS0) | (chan & 0x0f);  //select input and ref
 22c:	8f 70       	andi	r24, 0x0F	; 15
 22e:	80 64       	ori	r24, 0x40	; 64
 230:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= (1<<ADSC);                 //start the conversion
 234:	ea e7       	ldi	r30, 0x7A	; 122
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	80 81       	ld	r24, Z
 23a:	80 64       	ori	r24, 0x40	; 64
 23c:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC));          //wait for end of conversion
 23e:	80 81       	ld	r24, Z
 240:	86 fd       	sbrc	r24, 6
 242:	fd cf       	rjmp	.-6      	; 0x23e <readAdc+0x12>
	return ADCW;
 244:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 248:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	0e 94 a7 02 	call	0x54e	; 0x54e <__floatunsisf>
}
 254:	08 95       	ret

00000256 <main>:

int main(void)
{
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	00 d0       	rcall	.+0      	; 0x25c <main+0x6>
 25c:	00 d0       	rcall	.+0      	; 0x25e <main+0x8>
 25e:	cd b7       	in	r28, 0x3d	; 61
 260:	de b7       	in	r29, 0x3e	; 62
	int v1;
	int v2;
	DDRB = 0xFF;
 262:	8f ef       	ldi	r24, 0xFF	; 255
 264:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xFF;
 266:	8a b9       	out	0x0a, r24	; 10
	unsigned char print[4];
	ADMUX = (1<<REFS0);     //select AVCC as reference
 268:	80 e4       	ldi	r24, 0x40	; 64
 26a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = 0b10000111;  //enable and prescale = 128 (16MHz/128 = 125kHz)
 26e:	87 e8       	ldi	r24, 0x87	; 135
 270:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	sei();
 274:	78 94       	sei
	inic_LCD_4bits();
 276:	0e 94 79 00 	call	0xf2	; 0xf2 <inic_LCD_4bits>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 27a:	2f ef       	ldi	r18, 0xFF	; 255
 27c:	83 e2       	ldi	r24, 0x23	; 35
 27e:	94 ef       	ldi	r25, 0xF4	; 244
 280:	21 50       	subi	r18, 0x01	; 1
 282:	80 40       	sbci	r24, 0x00	; 0
 284:	90 40       	sbci	r25, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <main+0x2a>
 288:	00 c0       	rjmp	.+0      	; 0x28a <main+0x34>
 28a:	00 00       	nop
	/* Replace with your application code */
	while (1)
	{
		_delay_ms(5000);
		ident_num(readAdc(0), print);
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	0e 94 16 01 	call	0x22c	; 0x22c <readAdc>
 292:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fixunssfsi>
 296:	dc 01       	movw	r26, r24
 298:	cb 01       	movw	r24, r22
 29a:	be 01       	movw	r22, r28
 29c:	6f 5f       	subi	r22, 0xFF	; 255
 29e:	7f 4f       	sbci	r23, 0xFF	; 255
 2a0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <ident_num>
		cmd_LCD(0x80, 0);
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	80 e8       	ldi	r24, 0x80	; 128
 2a8:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[3], 1);
 2ac:	61 e0       	ldi	r22, 0x01	; 1
 2ae:	8c 81       	ldd	r24, Y+4	; 0x04
 2b0:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[2], 1);
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	8b 81       	ldd	r24, Y+3	; 0x03
 2b8:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[1], 1);
 2bc:	61 e0       	ldi	r22, 0x01	; 1
 2be:	8a 81       	ldd	r24, Y+2	; 0x02
 2c0:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[0], 1);
 2c4:	61 e0       	ldi	r22, 0x01	; 1
 2c6:	89 81       	ldd	r24, Y+1	; 0x01
 2c8:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD('>', 1);
 2cc:	61 e0       	ldi	r22, 0x01	; 1
 2ce:	8e e3       	ldi	r24, 0x3E	; 62
 2d0:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		v1 = (int)(100*((readAdc(0)*5*2)/1024));
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	0e 94 16 01 	call	0x22c	; 0x22c <readAdc>
		ident_num(v1, print);
 2da:	20 e0       	ldi	r18, 0x00	; 0
 2dc:	30 e0       	ldi	r19, 0x00	; 0
 2de:	40 ea       	ldi	r20, 0xA0	; 160
 2e0:	50 e4       	ldi	r21, 0x40	; 64
 2e2:	0e 94 35 03 	call	0x66a	; 0x66a <__mulsf3>
 2e6:	9b 01       	movw	r18, r22
 2e8:	ac 01       	movw	r20, r24
 2ea:	0e 94 05 02 	call	0x40a	; 0x40a <__addsf3>
 2ee:	20 e0       	ldi	r18, 0x00	; 0
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	40 e8       	ldi	r20, 0x80	; 128
 2f4:	5a e3       	ldi	r21, 0x3A	; 58
 2f6:	0e 94 35 03 	call	0x66a	; 0x66a <__mulsf3>
 2fa:	20 e0       	ldi	r18, 0x00	; 0
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	48 ec       	ldi	r20, 0xC8	; 200
 300:	52 e4       	ldi	r21, 0x42	; 66
 302:	0e 94 35 03 	call	0x66a	; 0x66a <__mulsf3>
 306:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixsfsi>
 30a:	dc 01       	movw	r26, r24
 30c:	cb 01       	movw	r24, r22
 30e:	be 01       	movw	r22, r28
 310:	6f 5f       	subi	r22, 0xFF	; 255
 312:	7f 4f       	sbci	r23, 0xFF	; 255
 314:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <ident_num>
		cmd_LCD(print[2], 1);
 318:	61 e0       	ldi	r22, 0x01	; 1
 31a:	8b 81       	ldd	r24, Y+3	; 0x03
 31c:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD('.', 1);
 320:	61 e0       	ldi	r22, 0x01	; 1
 322:	8e e2       	ldi	r24, 0x2E	; 46
 324:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[1], 1);
 328:	61 e0       	ldi	r22, 0x01	; 1
 32a:	8a 81       	ldd	r24, Y+2	; 0x02
 32c:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[0], 1);
 330:	61 e0       	ldi	r22, 0x01	; 1
 332:	89 81       	ldd	r24, Y+1	; 0x01
 334:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD('V', 1);
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	86 e5       	ldi	r24, 0x56	; 86
 33c:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(0xC0, 0);
 340:	60 e0       	ldi	r22, 0x00	; 0
 342:	80 ec       	ldi	r24, 0xC0	; 192
 344:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		ident_num(readAdc(1), print);
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	0e 94 16 01 	call	0x22c	; 0x22c <readAdc>
 34e:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fixunssfsi>
 352:	dc 01       	movw	r26, r24
 354:	cb 01       	movw	r24, r22
 356:	be 01       	movw	r22, r28
 358:	6f 5f       	subi	r22, 0xFF	; 255
 35a:	7f 4f       	sbci	r23, 0xFF	; 255
 35c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <ident_num>
		cmd_LCD(print[3], 1);
 360:	61 e0       	ldi	r22, 0x01	; 1
 362:	8c 81       	ldd	r24, Y+4	; 0x04
 364:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[2], 1);
 368:	61 e0       	ldi	r22, 0x01	; 1
 36a:	8b 81       	ldd	r24, Y+3	; 0x03
 36c:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[1], 1);
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	8a 81       	ldd	r24, Y+2	; 0x02
 374:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[0], 1);
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	89 81       	ldd	r24, Y+1	; 0x01
 37c:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD('>', 1);
 380:	61 e0       	ldi	r22, 0x01	; 1
 382:	8e e3       	ldi	r24, 0x3E	; 62
 384:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		v2 = (int)(100*((readAdc(1)*5*2)/1024));
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	0e 94 16 01 	call	0x22c	; 0x22c <readAdc>
		ident_num(v2, print);
 38e:	20 e0       	ldi	r18, 0x00	; 0
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	40 ea       	ldi	r20, 0xA0	; 160
 394:	50 e4       	ldi	r21, 0x40	; 64
 396:	0e 94 35 03 	call	0x66a	; 0x66a <__mulsf3>
 39a:	9b 01       	movw	r18, r22
 39c:	ac 01       	movw	r20, r24
 39e:	0e 94 05 02 	call	0x40a	; 0x40a <__addsf3>
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	40 e8       	ldi	r20, 0x80	; 128
 3a8:	5a e3       	ldi	r21, 0x3A	; 58
 3aa:	0e 94 35 03 	call	0x66a	; 0x66a <__mulsf3>
 3ae:	20 e0       	ldi	r18, 0x00	; 0
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	48 ec       	ldi	r20, 0xC8	; 200
 3b4:	52 e4       	ldi	r21, 0x42	; 66
 3b6:	0e 94 35 03 	call	0x66a	; 0x66a <__mulsf3>
 3ba:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixsfsi>
 3be:	dc 01       	movw	r26, r24
 3c0:	cb 01       	movw	r24, r22
 3c2:	be 01       	movw	r22, r28
 3c4:	6f 5f       	subi	r22, 0xFF	; 255
 3c6:	7f 4f       	sbci	r23, 0xFF	; 255
 3c8:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <ident_num>
		cmd_LCD(print[2], 1);
 3cc:	61 e0       	ldi	r22, 0x01	; 1
 3ce:	8b 81       	ldd	r24, Y+3	; 0x03
 3d0:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD('.', 1);
 3d4:	61 e0       	ldi	r22, 0x01	; 1
 3d6:	8e e2       	ldi	r24, 0x2E	; 46
 3d8:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[1], 1);
 3dc:	61 e0       	ldi	r22, 0x01	; 1
 3de:	8a 81       	ldd	r24, Y+2	; 0x02
 3e0:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD(print[0], 1);
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	89 81       	ldd	r24, Y+1	; 0x01
 3e8:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
		cmd_LCD('V', 1);
 3ec:	61 e0       	ldi	r22, 0x01	; 1
 3ee:	86 e5       	ldi	r24, 0x56	; 86
 3f0:	0e 94 40 00 	call	0x80	; 0x80 <cmd_LCD>
 3f4:	2f ef       	ldi	r18, 0xFF	; 255
 3f6:	81 ee       	ldi	r24, 0xE1	; 225
 3f8:	94 e0       	ldi	r25, 0x04	; 4
 3fa:	21 50       	subi	r18, 0x01	; 1
 3fc:	80 40       	sbci	r24, 0x00	; 0
 3fe:	90 40       	sbci	r25, 0x00	; 0
 400:	e1 f7       	brne	.-8      	; 0x3fa <main+0x1a4>
 402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 404:	00 00       	nop
 406:	39 cf       	rjmp	.-398    	; 0x27a <main+0x24>

00000408 <__subsf3>:
 408:	50 58       	subi	r21, 0x80	; 128

0000040a <__addsf3>:
 40a:	bb 27       	eor	r27, r27
 40c:	aa 27       	eor	r26, r26
 40e:	0e 94 1c 02 	call	0x438	; 0x438 <__addsf3x>
 412:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_round>
 416:	0e 94 ed 02 	call	0x5da	; 0x5da <__fp_pscA>
 41a:	38 f0       	brcs	.+14     	; 0x42a <__addsf3+0x20>
 41c:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <__fp_pscB>
 420:	20 f0       	brcs	.+8      	; 0x42a <__addsf3+0x20>
 422:	39 f4       	brne	.+14     	; 0x432 <__addsf3+0x28>
 424:	9f 3f       	cpi	r25, 0xFF	; 255
 426:	19 f4       	brne	.+6      	; 0x42e <__addsf3+0x24>
 428:	26 f4       	brtc	.+8      	; 0x432 <__addsf3+0x28>
 42a:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__fp_nan>
 42e:	0e f4       	brtc	.+2      	; 0x432 <__addsf3+0x28>
 430:	e0 95       	com	r30
 432:	e7 fb       	bst	r30, 7
 434:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_inf>

00000438 <__addsf3x>:
 438:	e9 2f       	mov	r30, r25
 43a:	0e 94 0c 03 	call	0x618	; 0x618 <__fp_split3>
 43e:	58 f3       	brcs	.-42     	; 0x416 <__addsf3+0xc>
 440:	ba 17       	cp	r27, r26
 442:	62 07       	cpc	r22, r18
 444:	73 07       	cpc	r23, r19
 446:	84 07       	cpc	r24, r20
 448:	95 07       	cpc	r25, r21
 44a:	20 f0       	brcs	.+8      	; 0x454 <__addsf3x+0x1c>
 44c:	79 f4       	brne	.+30     	; 0x46c <__addsf3x+0x34>
 44e:	a6 f5       	brtc	.+104    	; 0x4b8 <__addsf3x+0x80>
 450:	0c 94 2e 03 	jmp	0x65c	; 0x65c <__fp_zero>
 454:	0e f4       	brtc	.+2      	; 0x458 <__addsf3x+0x20>
 456:	e0 95       	com	r30
 458:	0b 2e       	mov	r0, r27
 45a:	ba 2f       	mov	r27, r26
 45c:	a0 2d       	mov	r26, r0
 45e:	0b 01       	movw	r0, r22
 460:	b9 01       	movw	r22, r18
 462:	90 01       	movw	r18, r0
 464:	0c 01       	movw	r0, r24
 466:	ca 01       	movw	r24, r20
 468:	a0 01       	movw	r20, r0
 46a:	11 24       	eor	r1, r1
 46c:	ff 27       	eor	r31, r31
 46e:	59 1b       	sub	r21, r25
 470:	99 f0       	breq	.+38     	; 0x498 <__addsf3x+0x60>
 472:	59 3f       	cpi	r21, 0xF9	; 249
 474:	50 f4       	brcc	.+20     	; 0x48a <__addsf3x+0x52>
 476:	50 3e       	cpi	r21, 0xE0	; 224
 478:	68 f1       	brcs	.+90     	; 0x4d4 <__addsf3x+0x9c>
 47a:	1a 16       	cp	r1, r26
 47c:	f0 40       	sbci	r31, 0x00	; 0
 47e:	a2 2f       	mov	r26, r18
 480:	23 2f       	mov	r18, r19
 482:	34 2f       	mov	r19, r20
 484:	44 27       	eor	r20, r20
 486:	58 5f       	subi	r21, 0xF8	; 248
 488:	f3 cf       	rjmp	.-26     	; 0x470 <__addsf3x+0x38>
 48a:	46 95       	lsr	r20
 48c:	37 95       	ror	r19
 48e:	27 95       	ror	r18
 490:	a7 95       	ror	r26
 492:	f0 40       	sbci	r31, 0x00	; 0
 494:	53 95       	inc	r21
 496:	c9 f7       	brne	.-14     	; 0x48a <__addsf3x+0x52>
 498:	7e f4       	brtc	.+30     	; 0x4b8 <__addsf3x+0x80>
 49a:	1f 16       	cp	r1, r31
 49c:	ba 0b       	sbc	r27, r26
 49e:	62 0b       	sbc	r22, r18
 4a0:	73 0b       	sbc	r23, r19
 4a2:	84 0b       	sbc	r24, r20
 4a4:	ba f0       	brmi	.+46     	; 0x4d4 <__addsf3x+0x9c>
 4a6:	91 50       	subi	r25, 0x01	; 1
 4a8:	a1 f0       	breq	.+40     	; 0x4d2 <__addsf3x+0x9a>
 4aa:	ff 0f       	add	r31, r31
 4ac:	bb 1f       	adc	r27, r27
 4ae:	66 1f       	adc	r22, r22
 4b0:	77 1f       	adc	r23, r23
 4b2:	88 1f       	adc	r24, r24
 4b4:	c2 f7       	brpl	.-16     	; 0x4a6 <__addsf3x+0x6e>
 4b6:	0e c0       	rjmp	.+28     	; 0x4d4 <__addsf3x+0x9c>
 4b8:	ba 0f       	add	r27, r26
 4ba:	62 1f       	adc	r22, r18
 4bc:	73 1f       	adc	r23, r19
 4be:	84 1f       	adc	r24, r20
 4c0:	48 f4       	brcc	.+18     	; 0x4d4 <__addsf3x+0x9c>
 4c2:	87 95       	ror	r24
 4c4:	77 95       	ror	r23
 4c6:	67 95       	ror	r22
 4c8:	b7 95       	ror	r27
 4ca:	f7 95       	ror	r31
 4cc:	9e 3f       	cpi	r25, 0xFE	; 254
 4ce:	08 f0       	brcs	.+2      	; 0x4d2 <__addsf3x+0x9a>
 4d0:	b0 cf       	rjmp	.-160    	; 0x432 <__addsf3+0x28>
 4d2:	93 95       	inc	r25
 4d4:	88 0f       	add	r24, r24
 4d6:	08 f0       	brcs	.+2      	; 0x4da <__addsf3x+0xa2>
 4d8:	99 27       	eor	r25, r25
 4da:	ee 0f       	add	r30, r30
 4dc:	97 95       	ror	r25
 4de:	87 95       	ror	r24
 4e0:	08 95       	ret

000004e2 <__fixsfsi>:
 4e2:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fixunssfsi>
 4e6:	68 94       	set
 4e8:	b1 11       	cpse	r27, r1
 4ea:	0c 94 2f 03 	jmp	0x65e	; 0x65e <__fp_szero>
 4ee:	08 95       	ret

000004f0 <__fixunssfsi>:
 4f0:	0e 94 14 03 	call	0x628	; 0x628 <__fp_splitA>
 4f4:	88 f0       	brcs	.+34     	; 0x518 <__fixunssfsi+0x28>
 4f6:	9f 57       	subi	r25, 0x7F	; 127
 4f8:	98 f0       	brcs	.+38     	; 0x520 <__fixunssfsi+0x30>
 4fa:	b9 2f       	mov	r27, r25
 4fc:	99 27       	eor	r25, r25
 4fe:	b7 51       	subi	r27, 0x17	; 23
 500:	b0 f0       	brcs	.+44     	; 0x52e <__fixunssfsi+0x3e>
 502:	e1 f0       	breq	.+56     	; 0x53c <__fixunssfsi+0x4c>
 504:	66 0f       	add	r22, r22
 506:	77 1f       	adc	r23, r23
 508:	88 1f       	adc	r24, r24
 50a:	99 1f       	adc	r25, r25
 50c:	1a f0       	brmi	.+6      	; 0x514 <__fixunssfsi+0x24>
 50e:	ba 95       	dec	r27
 510:	c9 f7       	brne	.-14     	; 0x504 <__fixunssfsi+0x14>
 512:	14 c0       	rjmp	.+40     	; 0x53c <__fixunssfsi+0x4c>
 514:	b1 30       	cpi	r27, 0x01	; 1
 516:	91 f0       	breq	.+36     	; 0x53c <__fixunssfsi+0x4c>
 518:	0e 94 2e 03 	call	0x65c	; 0x65c <__fp_zero>
 51c:	b1 e0       	ldi	r27, 0x01	; 1
 51e:	08 95       	ret
 520:	0c 94 2e 03 	jmp	0x65c	; 0x65c <__fp_zero>
 524:	67 2f       	mov	r22, r23
 526:	78 2f       	mov	r23, r24
 528:	88 27       	eor	r24, r24
 52a:	b8 5f       	subi	r27, 0xF8	; 248
 52c:	39 f0       	breq	.+14     	; 0x53c <__fixunssfsi+0x4c>
 52e:	b9 3f       	cpi	r27, 0xF9	; 249
 530:	cc f3       	brlt	.-14     	; 0x524 <__fixunssfsi+0x34>
 532:	86 95       	lsr	r24
 534:	77 95       	ror	r23
 536:	67 95       	ror	r22
 538:	b3 95       	inc	r27
 53a:	d9 f7       	brne	.-10     	; 0x532 <__fixunssfsi+0x42>
 53c:	3e f4       	brtc	.+14     	; 0x54c <__fixunssfsi+0x5c>
 53e:	90 95       	com	r25
 540:	80 95       	com	r24
 542:	70 95       	com	r23
 544:	61 95       	neg	r22
 546:	7f 4f       	sbci	r23, 0xFF	; 255
 548:	8f 4f       	sbci	r24, 0xFF	; 255
 54a:	9f 4f       	sbci	r25, 0xFF	; 255
 54c:	08 95       	ret

0000054e <__floatunsisf>:
 54e:	e8 94       	clt
 550:	09 c0       	rjmp	.+18     	; 0x564 <__floatsisf+0x12>

00000552 <__floatsisf>:
 552:	97 fb       	bst	r25, 7
 554:	3e f4       	brtc	.+14     	; 0x564 <__floatsisf+0x12>
 556:	90 95       	com	r25
 558:	80 95       	com	r24
 55a:	70 95       	com	r23
 55c:	61 95       	neg	r22
 55e:	7f 4f       	sbci	r23, 0xFF	; 255
 560:	8f 4f       	sbci	r24, 0xFF	; 255
 562:	9f 4f       	sbci	r25, 0xFF	; 255
 564:	99 23       	and	r25, r25
 566:	a9 f0       	breq	.+42     	; 0x592 <__floatsisf+0x40>
 568:	f9 2f       	mov	r31, r25
 56a:	96 e9       	ldi	r25, 0x96	; 150
 56c:	bb 27       	eor	r27, r27
 56e:	93 95       	inc	r25
 570:	f6 95       	lsr	r31
 572:	87 95       	ror	r24
 574:	77 95       	ror	r23
 576:	67 95       	ror	r22
 578:	b7 95       	ror	r27
 57a:	f1 11       	cpse	r31, r1
 57c:	f8 cf       	rjmp	.-16     	; 0x56e <__floatsisf+0x1c>
 57e:	fa f4       	brpl	.+62     	; 0x5be <__floatsisf+0x6c>
 580:	bb 0f       	add	r27, r27
 582:	11 f4       	brne	.+4      	; 0x588 <__floatsisf+0x36>
 584:	60 ff       	sbrs	r22, 0
 586:	1b c0       	rjmp	.+54     	; 0x5be <__floatsisf+0x6c>
 588:	6f 5f       	subi	r22, 0xFF	; 255
 58a:	7f 4f       	sbci	r23, 0xFF	; 255
 58c:	8f 4f       	sbci	r24, 0xFF	; 255
 58e:	9f 4f       	sbci	r25, 0xFF	; 255
 590:	16 c0       	rjmp	.+44     	; 0x5be <__floatsisf+0x6c>
 592:	88 23       	and	r24, r24
 594:	11 f0       	breq	.+4      	; 0x59a <__floatsisf+0x48>
 596:	96 e9       	ldi	r25, 0x96	; 150
 598:	11 c0       	rjmp	.+34     	; 0x5bc <__floatsisf+0x6a>
 59a:	77 23       	and	r23, r23
 59c:	21 f0       	breq	.+8      	; 0x5a6 <__floatsisf+0x54>
 59e:	9e e8       	ldi	r25, 0x8E	; 142
 5a0:	87 2f       	mov	r24, r23
 5a2:	76 2f       	mov	r23, r22
 5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <__floatsisf+0x5e>
 5a6:	66 23       	and	r22, r22
 5a8:	71 f0       	breq	.+28     	; 0x5c6 <__floatsisf+0x74>
 5aa:	96 e8       	ldi	r25, 0x86	; 134
 5ac:	86 2f       	mov	r24, r22
 5ae:	70 e0       	ldi	r23, 0x00	; 0
 5b0:	60 e0       	ldi	r22, 0x00	; 0
 5b2:	2a f0       	brmi	.+10     	; 0x5be <__floatsisf+0x6c>
 5b4:	9a 95       	dec	r25
 5b6:	66 0f       	add	r22, r22
 5b8:	77 1f       	adc	r23, r23
 5ba:	88 1f       	adc	r24, r24
 5bc:	da f7       	brpl	.-10     	; 0x5b4 <__floatsisf+0x62>
 5be:	88 0f       	add	r24, r24
 5c0:	96 95       	lsr	r25
 5c2:	87 95       	ror	r24
 5c4:	97 f9       	bld	r25, 7
 5c6:	08 95       	ret

000005c8 <__fp_inf>:
 5c8:	97 f9       	bld	r25, 7
 5ca:	9f 67       	ori	r25, 0x7F	; 127
 5cc:	80 e8       	ldi	r24, 0x80	; 128
 5ce:	70 e0       	ldi	r23, 0x00	; 0
 5d0:	60 e0       	ldi	r22, 0x00	; 0
 5d2:	08 95       	ret

000005d4 <__fp_nan>:
 5d4:	9f ef       	ldi	r25, 0xFF	; 255
 5d6:	80 ec       	ldi	r24, 0xC0	; 192
 5d8:	08 95       	ret

000005da <__fp_pscA>:
 5da:	00 24       	eor	r0, r0
 5dc:	0a 94       	dec	r0
 5de:	16 16       	cp	r1, r22
 5e0:	17 06       	cpc	r1, r23
 5e2:	18 06       	cpc	r1, r24
 5e4:	09 06       	cpc	r0, r25
 5e6:	08 95       	ret

000005e8 <__fp_pscB>:
 5e8:	00 24       	eor	r0, r0
 5ea:	0a 94       	dec	r0
 5ec:	12 16       	cp	r1, r18
 5ee:	13 06       	cpc	r1, r19
 5f0:	14 06       	cpc	r1, r20
 5f2:	05 06       	cpc	r0, r21
 5f4:	08 95       	ret

000005f6 <__fp_round>:
 5f6:	09 2e       	mov	r0, r25
 5f8:	03 94       	inc	r0
 5fa:	00 0c       	add	r0, r0
 5fc:	11 f4       	brne	.+4      	; 0x602 <__fp_round+0xc>
 5fe:	88 23       	and	r24, r24
 600:	52 f0       	brmi	.+20     	; 0x616 <__fp_round+0x20>
 602:	bb 0f       	add	r27, r27
 604:	40 f4       	brcc	.+16     	; 0x616 <__fp_round+0x20>
 606:	bf 2b       	or	r27, r31
 608:	11 f4       	brne	.+4      	; 0x60e <__fp_round+0x18>
 60a:	60 ff       	sbrs	r22, 0
 60c:	04 c0       	rjmp	.+8      	; 0x616 <__fp_round+0x20>
 60e:	6f 5f       	subi	r22, 0xFF	; 255
 610:	7f 4f       	sbci	r23, 0xFF	; 255
 612:	8f 4f       	sbci	r24, 0xFF	; 255
 614:	9f 4f       	sbci	r25, 0xFF	; 255
 616:	08 95       	ret

00000618 <__fp_split3>:
 618:	57 fd       	sbrc	r21, 7
 61a:	90 58       	subi	r25, 0x80	; 128
 61c:	44 0f       	add	r20, r20
 61e:	55 1f       	adc	r21, r21
 620:	59 f0       	breq	.+22     	; 0x638 <__fp_splitA+0x10>
 622:	5f 3f       	cpi	r21, 0xFF	; 255
 624:	71 f0       	breq	.+28     	; 0x642 <__fp_splitA+0x1a>
 626:	47 95       	ror	r20

00000628 <__fp_splitA>:
 628:	88 0f       	add	r24, r24
 62a:	97 fb       	bst	r25, 7
 62c:	99 1f       	adc	r25, r25
 62e:	61 f0       	breq	.+24     	; 0x648 <__fp_splitA+0x20>
 630:	9f 3f       	cpi	r25, 0xFF	; 255
 632:	79 f0       	breq	.+30     	; 0x652 <__fp_splitA+0x2a>
 634:	87 95       	ror	r24
 636:	08 95       	ret
 638:	12 16       	cp	r1, r18
 63a:	13 06       	cpc	r1, r19
 63c:	14 06       	cpc	r1, r20
 63e:	55 1f       	adc	r21, r21
 640:	f2 cf       	rjmp	.-28     	; 0x626 <__fp_split3+0xe>
 642:	46 95       	lsr	r20
 644:	f1 df       	rcall	.-30     	; 0x628 <__fp_splitA>
 646:	08 c0       	rjmp	.+16     	; 0x658 <__fp_splitA+0x30>
 648:	16 16       	cp	r1, r22
 64a:	17 06       	cpc	r1, r23
 64c:	18 06       	cpc	r1, r24
 64e:	99 1f       	adc	r25, r25
 650:	f1 cf       	rjmp	.-30     	; 0x634 <__fp_splitA+0xc>
 652:	86 95       	lsr	r24
 654:	71 05       	cpc	r23, r1
 656:	61 05       	cpc	r22, r1
 658:	08 94       	sec
 65a:	08 95       	ret

0000065c <__fp_zero>:
 65c:	e8 94       	clt

0000065e <__fp_szero>:
 65e:	bb 27       	eor	r27, r27
 660:	66 27       	eor	r22, r22
 662:	77 27       	eor	r23, r23
 664:	cb 01       	movw	r24, r22
 666:	97 f9       	bld	r25, 7
 668:	08 95       	ret

0000066a <__mulsf3>:
 66a:	0e 94 48 03 	call	0x690	; 0x690 <__mulsf3x>
 66e:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_round>
 672:	0e 94 ed 02 	call	0x5da	; 0x5da <__fp_pscA>
 676:	38 f0       	brcs	.+14     	; 0x686 <__mulsf3+0x1c>
 678:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <__fp_pscB>
 67c:	20 f0       	brcs	.+8      	; 0x686 <__mulsf3+0x1c>
 67e:	95 23       	and	r25, r21
 680:	11 f0       	breq	.+4      	; 0x686 <__mulsf3+0x1c>
 682:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_inf>
 686:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__fp_nan>
 68a:	11 24       	eor	r1, r1
 68c:	0c 94 2f 03 	jmp	0x65e	; 0x65e <__fp_szero>

00000690 <__mulsf3x>:
 690:	0e 94 0c 03 	call	0x618	; 0x618 <__fp_split3>
 694:	70 f3       	brcs	.-36     	; 0x672 <__mulsf3+0x8>

00000696 <__mulsf3_pse>:
 696:	95 9f       	mul	r25, r21
 698:	c1 f3       	breq	.-16     	; 0x68a <__mulsf3+0x20>
 69a:	95 0f       	add	r25, r21
 69c:	50 e0       	ldi	r21, 0x00	; 0
 69e:	55 1f       	adc	r21, r21
 6a0:	62 9f       	mul	r22, r18
 6a2:	f0 01       	movw	r30, r0
 6a4:	72 9f       	mul	r23, r18
 6a6:	bb 27       	eor	r27, r27
 6a8:	f0 0d       	add	r31, r0
 6aa:	b1 1d       	adc	r27, r1
 6ac:	63 9f       	mul	r22, r19
 6ae:	aa 27       	eor	r26, r26
 6b0:	f0 0d       	add	r31, r0
 6b2:	b1 1d       	adc	r27, r1
 6b4:	aa 1f       	adc	r26, r26
 6b6:	64 9f       	mul	r22, r20
 6b8:	66 27       	eor	r22, r22
 6ba:	b0 0d       	add	r27, r0
 6bc:	a1 1d       	adc	r26, r1
 6be:	66 1f       	adc	r22, r22
 6c0:	82 9f       	mul	r24, r18
 6c2:	22 27       	eor	r18, r18
 6c4:	b0 0d       	add	r27, r0
 6c6:	a1 1d       	adc	r26, r1
 6c8:	62 1f       	adc	r22, r18
 6ca:	73 9f       	mul	r23, r19
 6cc:	b0 0d       	add	r27, r0
 6ce:	a1 1d       	adc	r26, r1
 6d0:	62 1f       	adc	r22, r18
 6d2:	83 9f       	mul	r24, r19
 6d4:	a0 0d       	add	r26, r0
 6d6:	61 1d       	adc	r22, r1
 6d8:	22 1f       	adc	r18, r18
 6da:	74 9f       	mul	r23, r20
 6dc:	33 27       	eor	r19, r19
 6de:	a0 0d       	add	r26, r0
 6e0:	61 1d       	adc	r22, r1
 6e2:	23 1f       	adc	r18, r19
 6e4:	84 9f       	mul	r24, r20
 6e6:	60 0d       	add	r22, r0
 6e8:	21 1d       	adc	r18, r1
 6ea:	82 2f       	mov	r24, r18
 6ec:	76 2f       	mov	r23, r22
 6ee:	6a 2f       	mov	r22, r26
 6f0:	11 24       	eor	r1, r1
 6f2:	9f 57       	subi	r25, 0x7F	; 127
 6f4:	50 40       	sbci	r21, 0x00	; 0
 6f6:	9a f0       	brmi	.+38     	; 0x71e <__mulsf3_pse+0x88>
 6f8:	f1 f0       	breq	.+60     	; 0x736 <__mulsf3_pse+0xa0>
 6fa:	88 23       	and	r24, r24
 6fc:	4a f0       	brmi	.+18     	; 0x710 <__mulsf3_pse+0x7a>
 6fe:	ee 0f       	add	r30, r30
 700:	ff 1f       	adc	r31, r31
 702:	bb 1f       	adc	r27, r27
 704:	66 1f       	adc	r22, r22
 706:	77 1f       	adc	r23, r23
 708:	88 1f       	adc	r24, r24
 70a:	91 50       	subi	r25, 0x01	; 1
 70c:	50 40       	sbci	r21, 0x00	; 0
 70e:	a9 f7       	brne	.-22     	; 0x6fa <__mulsf3_pse+0x64>
 710:	9e 3f       	cpi	r25, 0xFE	; 254
 712:	51 05       	cpc	r21, r1
 714:	80 f0       	brcs	.+32     	; 0x736 <__mulsf3_pse+0xa0>
 716:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_inf>
 71a:	0c 94 2f 03 	jmp	0x65e	; 0x65e <__fp_szero>
 71e:	5f 3f       	cpi	r21, 0xFF	; 255
 720:	e4 f3       	brlt	.-8      	; 0x71a <__mulsf3_pse+0x84>
 722:	98 3e       	cpi	r25, 0xE8	; 232
 724:	d4 f3       	brlt	.-12     	; 0x71a <__mulsf3_pse+0x84>
 726:	86 95       	lsr	r24
 728:	77 95       	ror	r23
 72a:	67 95       	ror	r22
 72c:	b7 95       	ror	r27
 72e:	f7 95       	ror	r31
 730:	e7 95       	ror	r30
 732:	9f 5f       	subi	r25, 0xFF	; 255
 734:	c1 f7       	brne	.-16     	; 0x726 <__mulsf3_pse+0x90>
 736:	fe 2b       	or	r31, r30
 738:	88 0f       	add	r24, r24
 73a:	91 1d       	adc	r25, r1
 73c:	96 95       	lsr	r25
 73e:	87 95       	ror	r24
 740:	97 f9       	bld	r25, 7
 742:	08 95       	ret

00000744 <__umulhisi3>:
 744:	a2 9f       	mul	r26, r18
 746:	b0 01       	movw	r22, r0
 748:	b3 9f       	mul	r27, r19
 74a:	c0 01       	movw	r24, r0
 74c:	a3 9f       	mul	r26, r19
 74e:	70 0d       	add	r23, r0
 750:	81 1d       	adc	r24, r1
 752:	11 24       	eor	r1, r1
 754:	91 1d       	adc	r25, r1
 756:	b2 9f       	mul	r27, r18
 758:	70 0d       	add	r23, r0
 75a:	81 1d       	adc	r24, r1
 75c:	11 24       	eor	r1, r1
 75e:	91 1d       	adc	r25, r1
 760:	08 95       	ret

00000762 <_exit>:
 762:	f8 94       	cli

00000764 <__stop_program>:
 764:	ff cf       	rjmp	.-2      	; 0x764 <__stop_program>
